@import "tailwindcss";

@layer base {
  :root {
    /* Home Assistant hivatalos színpaletta */
    --background: 0 0% 100%;
    --foreground: 213 27% 12%;
    --card: 0 0% 100%;
    --card-foreground: 213 27% 12%;
    --popover: 0 0% 100%;
    --popover-foreground: 213 27% 12%;

    /* HA hivatalos kék primary szín */
    --primary: 197 97% 48%; /* #03a9f4 HA official blue */
    --primary-foreground: 0 0% 100%;

    /* HA-stílusú secondary */
    --secondary: 210 40% 96%; /* Light gray */
    --secondary-foreground: 213 27% 12%;
    --muted: 210 40% 98%;
    --muted-foreground: 213 9% 40%; /* HA muted text */

    /* HA accent colors */
    --accent: 214 84% 95%; /* Light blue */
    --accent-foreground: 214 84% 40%;

    /* HA red for destructive */
    --destructive: 358 75% 59%; /* HA red */
    --destructive-foreground: 0 0% 100%;

    /* Semantic status colors - HA style */
    --success: 120 60% 50%; /* HA green */
    --success-foreground: 0 0% 100%;
    --warning: 35 95% 58%; /* HA orange */
    --warning-foreground: 0 0% 100%;
    --info: 197 97% 48%; /* Same as primary - HA blue */
    --info-foreground: 0 0% 100%;

    /* State indicators */
    --modified: 214 84% 95%; /* Light blue for modified state */
    --modified-foreground: 214 84% 40%;

    /* HA borders - subtle and clean */
    --border: 214 32% 91%; /* Light blue-gray */
    --input: 214 32% 91%;
    --ring: 214 84% 56%;
    --radius: 0.5rem; /* HA uses smaller radius */
  }

  .dark {
    /* Home Assistant dark mode colors */
    --background: 220 13% 9%; /* HA dark bg */
    --foreground: 210 40% 98%;
    --card: 220 13% 11%; /* HA card dark */
    --card-foreground: 210 40% 98%;
    --popover: 220 13% 11%;
    --popover-foreground: 210 40% 98%;

    /* HA dark mode primary - lighter blue */
    --primary: 214 84% 66%;
    --primary-foreground: 220 13% 9%;

    /* HA dark secondary */
    --secondary: 220 13% 15%;
    --secondary-foreground: 210 40% 98%;
    --muted: 220 13% 15%;
    --muted-foreground: 217 10% 64%; /* HA muted dark */

    /* HA dark accent */
    --accent: 220 13% 15%;
    --accent-foreground: 214 84% 66%;

    /* HA dark destructive */
    --destructive: 358 75% 59%;
    --destructive-foreground: 210 40% 98%;

    /* Semantic status colors - HA dark style */
    --success: 120 60% 55%; /* Slightly lighter green for dark */
    --success-foreground: 220 13% 9%;
    --warning: 35 95% 65%; /* Slightly lighter orange for dark */
    --warning-foreground: 220 13% 9%;
    --info: 214 84% 66%; /* Same as primary - lighter blue for dark */
    --info-foreground: 220 13% 9%;

    /* State indicators - dark */
    --modified: 220 13% 15%; /* Dark background for modified */
    --modified-foreground: 214 84% 66%;

    /* HA dark borders */
    --border: 220 13% 15%;
    --input: 220 13% 15%;
    --ring: 214 84% 66%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    /* HA uses Roboto but Inter is similar and more modern */
    font-family: 'Inter', 'Roboto', system-ui, -apple-system, sans-serif;
    font-feature-settings: "rlig" 1, "calt" 1;
    min-height: 100vh;
    /* Subtle HA-style pattern */
    background-image: radial-gradient(circle at 20% 20%, hsl(214 84% 56% / 0.03) 0%, transparent 50%);
  }
}

@layer utilities {
  /* Background colors */
  .bg-background {
    background-color: hsl(var(--background));
  }
  .bg-foreground {
    background-color: hsl(var(--foreground));
  }
  .bg-card {
    background-color: hsl(var(--card));
  }
  .bg-card-foreground {
    background-color: hsl(var(--card-foreground));
  }
  .bg-popover {
    background-color: hsl(var(--popover));
  }
  .bg-popover-foreground {
    background-color: hsl(var(--popover-foreground));
  }
  .bg-primary {
    background-color: hsl(var(--primary));
  }
  .bg-primary-foreground {
    background-color: hsl(var(--primary-foreground));
  }
  .bg-secondary {
    background-color: hsl(var(--secondary));
  }
  .bg-secondary-foreground {
    background-color: hsl(var(--secondary-foreground));
  }
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  .bg-muted-foreground {
    background-color: hsl(var(--muted-foreground));
  }
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  .bg-accent-foreground {
    background-color: hsl(var(--accent-foreground));
  }
  .bg-destructive {
    background-color: hsl(var(--destructive));
  }
  .bg-destructive-foreground {
    background-color: hsl(var(--destructive-foreground));
  }

  /* Text colors */
  .text-background {
    color: hsl(var(--background));
  }
  .text-foreground {
    color: hsl(var(--foreground));
  }
  .text-card {
    color: hsl(var(--card));
  }
  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }
  .text-popover {
    color: hsl(var(--popover));
  }
  .text-popover-foreground {
    color: hsl(var(--popover-foreground));
  }
  .text-primary {
    color: hsl(var(--primary));
  }
  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }
  .text-secondary {
    color: hsl(var(--secondary));
  }
  .text-secondary-foreground {
    color: hsl(var(--secondary-foreground));
  }
  .text-muted {
    color: hsl(var(--muted));
  }
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  .text-accent {
    color: hsl(var(--accent));
  }
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }
  .text-destructive {
    color: hsl(var(--destructive));
  }
  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }

  /* Semantic status colors */
  .bg-success {
    background-color: hsl(var(--success));
  }
  .bg-success-foreground {
    background-color: hsl(var(--success-foreground));
  }
  .text-success {
    color: hsl(var(--success));
  }
  .text-success-foreground {
    color: hsl(var(--success-foreground));
  }
  .border-success {
    border-color: hsl(var(--success));
  }

  .bg-warning {
    background-color: hsl(var(--warning));
  }
  .bg-warning-foreground {
    background-color: hsl(var(--warning-foreground));
  }
  .text-warning {
    color: hsl(var(--warning));
  }
  .text-warning-foreground {
    color: hsl(var(--warning-foreground));
  }
  .border-warning {
    border-color: hsl(var(--warning));
  }

  .bg-info {
    background-color: hsl(var(--info));
  }
  .bg-info-foreground {
    background-color: hsl(var(--info-foreground));
  }
  .text-info {
    color: hsl(var(--info));
  }
  .text-info-foreground {
    color: hsl(var(--info-foreground));
  }
  .border-info {
    border-color: hsl(var(--info));
  }

  .bg-modified {
    background-color: hsl(var(--modified));
  }
  .text-modified {
    color: hsl(var(--modified-foreground));
  }
  .border-modified {
    border-color: hsl(var(--modified-foreground));
  }

  /* Border colors */
  .border-input {
    border-color: hsl(var(--input));
  }
  .border-border {
    border-color: hsl(var(--border));
  }
  
  /* Ring colors */
  .ring-ring {
    --tw-ring-color: hsl(var(--ring));
  }
}