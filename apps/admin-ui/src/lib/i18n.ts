import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

const resources = {
  hu: {
    translation: {
      // Navigation
      dashboard: '√Åttekint√©s',
      entities: 'Entit√°sok',
      clusters: 'Clusterek',
      maintenance: 'Karbantart√°s', 
      monitoring: 'Monitoring',
      
      // Dashboard
      systemOverview: 'Rendszer √°ttekint√©s',
      database: 'Adatb√°zis',
      schema: 'S√©ma',
      vector: 'Vektor',
      system: 'Rendszer',
      status: '√Ållapot',
      current: 'Jelenlegi',
      latest: 'Leg√∫jabb',
      dimension: 'Dimenzi√≥',
      ok: 'Rendben',
      error: 'Hiba',
      mismatch: 'Elt√©r√©s',
      degraded: 'Gyeng√≠tett',
      
      // Entities
      search: 'Keres√©s',
      filters: 'Sz≈±r≈ëk',
      displayed: 'Megjelen√≠tett',
      total: '√ñsszes',
      domainTypes: 'Domain t√≠pusok',
      areas: 'Ter√ºletek',
      entityList: 'Entit√°sok list√°ja',
      clearFilters: 'Sz≈±r≈ëk t√∂rl√©se',
      selectDomain: 'Domain kiv√°laszt√°sa',
      selectArea: 'Ter√ºlet kiv√°laszt√°sa',
      allDomains: 'Minden domain',
      allAreas: 'Minden ter√ºlet',
      attributes: 'Attrib√∫tumok',
      
      // Clusters
      clusterManagement: 'Cluster kezel√©s',
      addCluster: 'Cluster hozz√°ad√°sa',
      editCluster: 'Cluster szerkeszt√©se',
      deleteCluster: 'Cluster t√∂rl√©se',
      name: 'N√©v',
      type: 'T√≠pus',
      scope: 'Hat√≥k√∂r',
      tags: 'C√≠mk√©k',
      description: 'Le√≠r√°s',
      actions: 'M≈±veletek',
      edit: 'Szerkeszt√©s',
      delete: 'T√∂rl√©s',
      save: 'Ment√©s',
      cancel: 'M√©gse',
      create: 'L√©trehoz√°s',
      
      // Maintenance
      systemStatus: 'Rendszer √°llapot',
      available: 'El√©rhet≈ë',
      unavailable: 'Nem el√©rhet≈ë',
      cpu: 'CPU',
      memory: 'Mem√≥ria',
      usage: 'haszn√°lat',
      databaseInit: 'Adatb√°zis inicializ√°l√°s',
      cacheClear: 'Cache t√∂rl√©s',
      vectorReindex: 'Vektor √∫jraindexel√©s',
      runBootstrap: 'Bootstrap futtat√°sa',
      clearCache: 'Cache t√∂rl√©se',
      reindex: '√öjraindexel√©s',
      running: 'Fut√°s',
      deleting: 'T√∂rl√©s',
      indexing: 'Indexel√©s',
      systemInfo: 'Rendszer inform√°ci√≥k',
      serviceInfo: 'Szolg√°ltat√°s inform√°ci√≥k',
      databaseStats: 'Adatb√°zis statisztik√°k',
      lastOperation: 'Utols√≥ m≈±velet eredm√©nye',
      noLogs: 'Nincsenek logok',
      clear: 'T√∂rl√©s',
      
      // Monitoring
      autoRefresh: 'Automatikus friss√≠t√©s',
      responseTime: 'V√°laszid≈ë',
      average: '√°tlag',
      serviceStatus: 'Szolg√°ltat√°s √°llapot',
      vectorSearch: 'Vektor keres√©s',
      vectorDimension: 'Vektor dimenzi√≥',
      cpuMemoryUsage: 'CPU & Mem√≥ria haszn√°lat',
      systemLogs: 'Rendszer logok',
      allLevels: '√ñsszes szint',
      errorsOnly: 'Csak hib√°k',
      warnings: 'Figyelmeztet√©sek',
      info: 'Inform√°ci√≥k',
      debug: 'Debug',
      dataCollection: 'Adatgy≈±jt√©s folyamatban',
      memoryPercent: 'Mem√≥ria %',
      responseTimeMs: 'V√°laszid≈ë (ms)',
      memoryUsage: 'Mem√≥ria',
      
      // Common
      loading: 'Bet√∂lt√©s',
      appTitle: 'HA-RAG Admin',
      searchPlaceholder: 'Keres√©s...',
      unsavedChanges: 'nem mentett v√°ltoztat√°s',
      settingsCount: 'be√°ll√≠t√°s',
      settingsInCategory: 'konfigur√°ci√≥s be√°ll√≠t√°s ebben a kateg√≥ri√°ban',
      resetConfirm: 'Biztosan alaphelyzetbe √°ll√≠tod ezt a be√°ll√≠t√°st?',
      searchPipelineDebugger: 'Semantic Search Pipeline Debugger',
      searchingText: 'Keres√©s folyamatban...',
      debugSearchButton: 'Debug keres√©s',
      indexingInProgress: 'Indexel√©s folyamatban...',
      operationInProgress: 'M≈±velet folyamatban...',
      operationResult: 'M≈±velet eredm√©nye',
      runningPipelineDebug: 'Pipeline debug futtat√°sa...',
      enterSearchQuery: '√çrjon be egy keres√©si kifejez√©st a t√∂bbszint≈± entit√°s-lek√©rdez√©si pipeline megjelen√≠t√©s√©hez',
      tagsCommaSeparated: 'C√≠mk√©k (vessz≈ëvel elv√°lasztva)',
      cacheCleanResult: 'Cache t√∂rl√©s eredm√©nye',
      vectorReindexing: 'Vektor √∫jraindexel√©s',
      connectingToReindexService: 'üîÑ Kapcsol√≥d√°s a vektor √∫jraindexel√©s szolg√°ltat√°shoz...',
      semanticSearchExplanation: 'üí° Ez a sz√∂veg alapj√°n t√∂rt√©nik a szemantikus keres√©s. Ha t√∫l √°ltal√°nos vagy nem kifejez≈ë,',
      // Dashboard specific
      connected: 'Kapcsol√≥dva',
      dimensions: 'Dimenzi√≥k',
      vectorIndex: 'Vektor Index',
      upToDate: 'Naprak√©sz',
      pending: 'F√ºgg≈ëben',
      updateAvailable: 'Friss√≠t√©s el√©rhet≈ë',
      schemaUpdateNeeded: 'S√©ma friss√≠t√©s sz√ºks√©ges',
      schemaUpdateAvailable: 'S√©ma friss√≠t√©s el√©rhet≈ë',
      systemInformation: 'Rendszer inform√°ci√≥k',
      databaseName: 'Adatb√°zis n√©v',
      vectorDimensions: 'Vektor dimenzi√≥k',
      schemaVersion: 'S√©ma verzi√≥',
      // Entity page specific (already defined above, removing duplicates)
      // Maintenance page specific (already defined above, removing duplicates)
      entityIngestion: 'Entit√°s ingeszt√°l√°s',
      cacheCleanError: 'Cache t√∂rl√©s hiba',
      cacheDeletion: 'Cache t√∂rl√©se',
      cacheDeleteDescription: 'Ez t√∂rli az √∂sszes cache-elt adatot. A rendszer lassabb lehet, m√≠g √∫jra bet√∂lti az adatokat.',
      entityIngestionDescription: 'Ez szinkroniz√°lja az √∂sszes Home Assistant entit√°st az adatb√°zisba √©l≈ë napl√≥z√°ssal. Ez eltarthat n√©h√°ny percig.',
      vectorReindexDescription: 'Ez √∫jrasz√°m√≠tja az √∂sszes entit√°s embeddingj√©t √©l≈ë napl√≥z√°ssal. Ez hossz√∫ id≈ët vehet ig√©nybe.',
      databaseInitDescription: 'Adatb√°zis kollekc√≥k √©s indexek √∫jra l√©trehoz√°sa.',
      cacheClearDescription: '√ñsszes cache adat t√∂rl√©se a mem√≥ri√°b√≥l.',
      ingestEntities: 'Entit√°sok ingeszt√°l√°sa',
      streamingTest: 'Streaming teszt',
      testFunctionality: 'Streaming funkci√≥k tesztel√©se.',
      startTest: 'Teszt ind√≠t√°sa',
      ingesting: 'Ingeszt√°l√°s...',
      embeddingBackend: 'Embedding backend:',
      embeddingDimensions: 'Embedding dimenzi√≥k:',
      lastBootstrap: 'Utols√≥ bootstrap:',
      uptime: 'Uptime:',
      documents: 'Dokumentumok:',
      databaseSize: 'Adatb√°zis m√©ret:',
      na: 'N/A',
      yes: 'Igen',
      no: 'Nem',
      enabled: 'Enged√©lyezve',
      disabled: 'Kikapcsolva',
      home: 'Kezd≈ëlap',
      settings: 'Be√°ll√≠t√°sok',
      logout: 'Kijelentkez√©s',
      
      // Log levels
      logError: 'Hiba',
      logWarning: 'Figyelmeztet√©s',
      logInfo: 'Info',
      logDebug: 'Debug',
      
      // Settings
      settingsPage: 'Be√°ll√≠t√°sok',
      configuration: 'Konfigur√°ci√≥',
      configurationManagement: 'Konfigur√°ci√≥kezel√©s',
      categories: 'Kateg√≥ri√°k',
      configCategories: {
        database: 'Adatb√°zis',
        embedding: 'Be√°gyaz√°s',
        performance: 'Teljes√≠tm√©ny',
        query_scope: 'Lek√©rdez√©si hat√≥k√∂r',
        similarity: 'Hasonl√≥s√°g',
        network: 'H√°l√≥zat',
        home_assistant: 'Home Assistant',
        debug: 'Hibakeres√©s',
        security: 'Biztons√°g'
      },
      resetToDefault: 'Alap√©rtelmezett vissza√°ll√≠t√°sa',
      saveChanges: 'V√°ltoztat√°sok ment√©se',
      discardChanges: 'V√°ltoztat√°sok elvet√©se',
      exportConfig: 'Konfigur√°ci√≥ export√°l√°sa',
      importConfig: 'Konfigur√°ci√≥ import√°l√°sa',
      validateConfig: 'Konfigur√°ci√≥ ellen≈ërz√©se',
      reloadConfig: 'Konfigur√°ci√≥ √∫jrat√∂lt√©se',
      restartRequired: '√öjraind√≠t√°s sz√ºks√©ges',
      restartWarning: 'N√©h√°ny v√°ltoztat√°s √∫jraind√≠t√°st ig√©nyel a hat√°lyba l√©p√©shez',
      configurationUpdated: 'Konfigur√°ci√≥ sikeresen friss√≠tve',
      configurationExported: 'Konfigur√°ci√≥ export√°lva',
      configurationValidated: 'Konfigur√°ci√≥ ellen≈ërizve',
      validationErrors: 'Valid√°ci√≥s hib√°k',
      validationWarnings: 'Figyelmeztet√©sek',
      configurationValid: 'A konfigur√°ci√≥ √©rv√©nyes',
      fieldRequired: 'Ez a mez≈ë k√∂telez≈ë',
      valueOutOfRange: '√ârt√©k a megengedett tartom√°nyon k√≠v√ºl',
      invalidValue: '√ârv√©nytelen √©rt√©k',
      sensitive: '√ârz√©keny adat',
      masked: 'Rejtett',
      recommendation: 'Aj√°nl√°s',
      example: 'P√©lda',
      defaultValue: 'Alap√©rtelmezett √©rt√©k',
      testConnection: 'Kapcsolat tesztel√©se',
      failed: 'Sikertelen',
      notConfigured: 'Nincs konfigur√°lva',
      testing: 'Tesztel√©s',
      currentValue: 'Jelenlegi √©rt√©k',
      exportSensitiveConfirm: 'Az export √©rz√©keny adatokat (jelszavakat, kulcsokat) tartalmaz. Biztosan export√°lni szeretn√©d ≈ëket?',
      
      // Field types
      fieldTypes: {
        string: 'Sz√∂veg',
        number: 'Sz√°m',
        boolean: 'Igen/Nem',
        select: 'Kiv√°laszt√°s',
        password: 'Jelsz√≥',
        url: 'URL c√≠m',
        file: 'F√°jl'
      },
    }
  },
  en: {
    translation: {
      // Navigation
      dashboard: 'Dashboard',
      entities: 'Entities',
      clusters: 'Clusters',
      maintenance: 'Maintenance',
      monitoring: 'Monitoring',
      
      // Dashboard
      systemOverview: 'System Overview',
      database: 'Database',
      schema: 'Schema',
      vector: 'Vector',
      system: 'System',
      status: 'Status',
      current: 'Current',
      latest: 'Latest',
      dimension: 'Dimension',
      ok: 'OK',
      error: 'Error',
      mismatch: 'Mismatch',
      degraded: 'Degraded',
      
      // Entities
      search: 'Search',
      filters: 'Filters',
      displayed: 'Displayed',
      total: 'Total',
      domainTypes: 'Domain Types',
      areas: 'Areas',
      entityList: 'Entity List',
      clearFilters: 'Clear Filters',
      selectDomain: 'Select Domain',
      selectArea: 'Select Area',
      allDomains: 'All Domains',
      allAreas: 'All Areas',
      attributes: 'Attributes',
      
      // Clusters
      clusterManagement: 'Cluster Management',
      addCluster: 'Add Cluster',
      editCluster: 'Edit Cluster',
      deleteCluster: 'Delete Cluster',
      name: 'Name',
      type: 'Type',
      scope: 'Scope',
      tags: 'Tags',
      description: 'Description',
      actions: 'Actions',
      edit: 'Edit',
      delete: 'Delete',
      save: 'Save',
      cancel: 'Cancel',
      create: 'Create',
      
      // Maintenance
      systemStatus: 'System Status',
      available: 'Available',
      unavailable: 'Unavailable',
      cpu: 'CPU',
      memory: 'Memory',
      usage: 'usage',
      databaseInit: 'Database Initialization',
      cacheClear: 'Cache Clear',
      vectorReindex: 'Vector Reindex',
      runBootstrap: 'Run Bootstrap',
      clearCache: 'Clear Cache',
      reindex: 'Reindex',
      running: 'Running',
      deleting: 'Deleting',
      indexing: 'Indexing',
      systemInfo: 'System Information',
      serviceInfo: 'Service Information',
      databaseStats: 'Database Statistics',
      lastOperation: 'Last Operation Result',
      noLogs: 'No logs',
      clear: 'Clear',
      
      // Monitoring
      autoRefresh: 'Auto refresh',
      responseTime: 'Response Time',
      average: 'average',
      serviceStatus: 'Service Status',
      vectorSearch: 'Vector Search',
      vectorDimension: 'Vector Dimension',
      cpuMemoryUsage: 'CPU & Memory Usage',
      systemLogs: 'System Logs',
      allLevels: 'All Levels',
      errorsOnly: 'Errors Only',
      warnings: 'Warnings',
      info: 'Information',
      debug: 'Debug',
      dataCollection: 'Data collection in progress',
      memoryPercent: 'Memory %',
      responseTimeMs: 'Response Time (ms)',
      memoryUsage: 'Memory',
      
      // Common
      loading: 'Loading',
      appTitle: 'HA-RAG Admin',
      searchPlaceholder: 'Search...',
      unsavedChanges: 'unsaved changes',
      settingsCount: 'settings',
      settingsInCategory: 'configuration settings in this category',
      resetConfirm: 'Are you sure you want to reset this setting to default?',
      searchPipelineDebugger: 'Semantic Search Pipeline Debugger',
      searchingText: 'Searching...',
      debugSearchButton: 'Debug Search',
      indexingInProgress: 'Indexing in progress...',
      operationInProgress: 'Operation in progress...',
      operationResult: 'Operation Result',
      runningPipelineDebug: 'Running pipeline debug...',
      enterSearchQuery: 'Enter a search query to visualize the multi-stage entity retrieval pipeline',
      tagsCommaSeparated: 'Tags (comma separated)',
      cacheCleanResult: 'Cache Clean Result',
      vectorReindexing: 'Vector Reindexing',
      connectingToReindexService: 'üîÑ Connecting to vector reindex service...',
      semanticSearchExplanation: 'üí° Semantic search is based on this text. If too general or not descriptive,',
      // Dashboard specific
      connected: 'Connected',
      dimensions: 'Dimensions',
      vectorIndex: 'Vector Index',
      upToDate: 'Up to date',
      pending: 'Pending',
      updateAvailable: 'Update available',
      schemaUpdateNeeded: 'Schema update needed',
      schemaUpdateAvailable: 'Schema Update Available',
      systemInformation: 'System Information',
      databaseName: 'Database Name',
      vectorDimensions: 'Vector Dimensions',
      schemaVersion: 'Schema Version',
      // Entity page specific (already defined above, removing duplicates)
      // Maintenance page specific (already defined above, removing duplicates)
      entityIngestion: 'Entity Ingestion',
      cacheCleanError: 'Cache Clean Error',
      cacheDeletion: 'Cache Deletion',
      cacheDeleteDescription: 'This will delete all cached data. The system may be slower while it reloads the data.',
      entityIngestionDescription: 'This synchronizes all Home Assistant entities to the database with live logging. This may take several minutes.',
      vectorReindexDescription: 'This recalculates all entity embeddings with live logging. This may take a long time.',
      databaseInitDescription: 'Recreate database collections and indexes.',
      cacheClearDescription: 'Delete all cached data from memory.',
      ingestEntities: 'Ingest Entities',
      streamingTest: 'Streaming Test',
      testFunctionality: 'Test streaming functionality.',
      startTest: 'Start Test',
      ingesting: 'Ingesting...',
      embeddingBackend: 'Embedding backend:',
      embeddingDimensions: 'Embedding dimensions:',
      lastBootstrap: 'Last bootstrap:',
      uptime: 'Uptime:',
      documents: 'Documents:',
      databaseSize: 'Database size:',
      na: 'N/A',
      yes: 'Yes',
      no: 'No',
      enabled: 'Enabled',
      disabled: 'Disabled',
      home: 'Home',
      settings: 'Settings',
      logout: 'Logout',
      
      // Log levels
      logError: 'Error',
      logWarning: 'Warning',
      logInfo: 'Info',
      logDebug: 'Debug',
      
      // Settings
      settingsPage: 'Settings',
      configuration: 'Configuration',
      configurationManagement: 'Configuration Management',
      categories: 'Categories',
      configCategories: {
        database: 'Database',
        embedding: 'Embedding',
        performance: 'Performance',
        query_scope: 'Query Scope',
        similarity: 'Similarity',
        network: 'Network',
        home_assistant: 'Home Assistant',
        debug: 'Debug',
        security: 'Security'
      },
      resetToDefault: 'Reset to Default',
      saveChanges: 'Save Changes',
      discardChanges: 'Discard Changes',
      exportConfig: 'Export Configuration',
      importConfig: 'Import Configuration',
      validateConfig: 'Validate Configuration',
      reloadConfig: 'Reload Configuration',
      restartRequired: 'Restart Required',
      restartWarning: 'Some changes require a restart to take effect',
      configurationUpdated: 'Configuration updated successfully',
      configurationExported: 'Configuration exported',
      configurationValidated: 'Configuration validated',
      validationErrors: 'Validation Errors',
      validationWarnings: 'Warnings',
      configurationValid: 'Configuration is valid',
      fieldRequired: 'This field is required',
      valueOutOfRange: 'Value is out of allowed range',
      invalidValue: 'Invalid value',
      sensitive: 'Sensitive data',
      masked: 'Masked',
      recommendation: 'Recommendation',
      example: 'Example',
      defaultValue: 'Default value',
      testConnection: 'Test Connection',
      failed: 'Failed',
      notConfigured: 'Not Configured',
      testing: 'Testing',
      currentValue: 'Current value',
      exportSensitiveConfirm: 'The export contains sensitive data (passwords, keys). Are you sure you want to export them?',
      
      // Field types
      fieldTypes: {
        string: 'Text',
        number: 'Number',
        boolean: 'Yes/No',
        select: 'Selection',
        password: 'Password',
        url: 'URL',
        file: 'File'
      },
    }
  }
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources,
    fallbackLng: 'hu', // Default to Hungarian
    debug: false,
    
    interpolation: {
      escapeValue: false,
    },
    
    detection: {
      order: ['localStorage', 'navigator'],
      caches: ['localStorage'],
    },
  });

export default i18n;